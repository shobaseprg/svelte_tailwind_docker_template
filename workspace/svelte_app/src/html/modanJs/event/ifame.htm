<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>

<body>
  <div id="inner">
    <button class="btn" data-tooltip="sbtn">short button !!</button>
    <button class="btn" data-tooltip="long message tooltip long message tooltip">long button !!</button>
  </div>
  <script>
    let tooltipElem;

    function createTooltip(message) {
      tooltipElem = document.createElement('div');
      tooltipElem.innerText = message;
      tooltipElem.className = "tooltip"
      document.body.append(tooltipElem);
    }

    function setTop(buttonRect, tooltipRect) {
      if (tooltipRect.height >= buttonRect.top) {//上にスペースがない場合
        tooltipElem.style.top = `${buttonRect.bottom}px`
      } else {
        tooltipElem.style.top = `${buttonRect.top - tooltipRect.height}px`
      }
    }

    function setHorizontalCenter(buttonRect, buttonBaseDiff) {
      const tooltipLeft = buttonRect.left + buttonBaseDiff;
      tooltipElem.style.left = `${tooltipLeft}px`;
    }

    document.addEventListener("mouseover", (ev) => {
      if (ev.target.tagName !== "BUTTON") return

      const overButton = ev.target;

      createTooltip(overButton.dataset.tooltip)

      const buttonRect = overButton.getBoundingClientRect();
      const tooltipRect = tooltipElem.getBoundingClientRect();

      const buttonBaseDiff = (buttonRect.width - tooltipRect.width) / 2;

      setTop(buttonRect, tooltipRect);


      //横位置
      if (buttonBaseDiff > 0) { //ツールチップが小さい場合
        // 左右の位置
        if (buttonRect.left < 0) { //左に見切れている場合
          if (Math.abs(buttonRect.left) - Math.abs(buttonBaseDiff) >= 0) {//差分の方が小さい場合
            tooltipElem.style.left = "0px";
          } else {//差分の方が大きい場合
            tooltipElem.style.left = `${Math.abs(buttonBaseDiff) - Math.abs(buttonRect.left)}px`;
          }
        } else if (buttonRect.right > document.body.clientWidth) { //右に見切れている場合
          if (Math.abs(buttonRect.left) - Math.abs(buttonBaseDiff) >= 0) {//差分の方が小さい場合
            tooltipElem.style.right = "0px";
          } else {//差分の方が大きい場合
            tooltipElem.style.right = `${Math.abs(buttonBaseDiff) - Math.abs(buttonRect.right)}px`;
          }
        }
        else {//見切れがない場合
          setHorizontalCenter(buttonRect, buttonBaseDiff);
        }
      } else {//ツールチップが大きい場合
        if (buttonRect.left < 0 || (Math.abs(buttonBaseDiff) > buttonRect.left)) {//ボタンが左に見切れる場合、またはツールチップが左に見切れる場合

          tooltipElem.style.left = "0px"
        } else if (buttonRect.right >= document.body.clientWidth || buttonRect.right + Math.abs(buttonBaseDiff) >= document.body.clientWidth) {//ボタンが右に見切れる場合、またはツールチップが右に見切れる場合

          tooltipElem.style.right = "0px"
        } else {//ツールチップが見切れない場合
          setHorizontalCenter(buttonRect, buttonBaseDiff);
        }
      }
    })

    document.onmouseout = function (e) {
      if (tooltipElem) {
        tooltipElem.remove();
        tooltipElem = null;
      }
    };
  </script>
</body>

<style>
  body {
    width: 600px;
    height: 300px;
  }

  .tooltip {
    position: fixed;
    padding: 3px;
    border: 1px solid #b3c9ce;
    border-radius: 4px;
    text-align: center;
    color: #333;
    background: #fff;
    box-shadow: 3px 3px 3px rgba(0, 0, 0, .3);
  }

  #inner {
    width: 1500px;
    height: 700px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .btn {
    margin: 70px;
  }
</style>


</html>
