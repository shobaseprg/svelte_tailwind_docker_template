<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>

<body>
  <div id="inner">
    <button class="btn" data-tooltip="sbtn">short button !!</button>
    <button class="btn" data-tooltip="long message tooltip--------------------------">long button !!</button>
  </div>

  <script>
    let tooltipElem;

    function createTooltip(message) {
      tooltipElem = document.createElement('div');
      tooltipElem.innerText = message;
      tooltipElem.className = "tooltip"
      document.body.append(tooltipElem);
    }

    function isLeftOverhang(buttonLeft) {
      return buttonLeft < 0
    }

    function isRightOverhang(buttonRight) {
      return buttonRight > 600
    }

    function isButtonDistanceThanDiff(diff, horizontalButtonSpace) {
      return Math.abs(horizontalButtonSpace) - Math.abs(diff) >= 0
    }

    function getButtonRect(buttonRect) {

    }

    document.addEventListener("mouseover", (ev) => {
      if (ev.target.tagName !== "BUTTON") return

      const overButton = ev.target;

      createTooltip(overButton.dataset.tooltip)

      const buttonRect = overButton.getBoundingClientRect();
      const tooltipWidth = tooltipElem.offsetWidth;

      const diff = (buttonRect.width - tooltipWidth) / 2;

      if (diff > 0) { //ツールチップが小さい場合
        // 左右の位置
        if (isLeftOverhang(buttonRect.left)) { //左に見切れている場合
          if (isButtonDistanceThanDiff(diff, buttonRect.left)) {//差分の方が小さい場合
            tooltipElem.style.left = "0px";
          } else {//差分の方が大きい場合
            tooltipElem.style.left = `${Math.abs(diff) - Math.abs(buttonRect.left)}px`;
          }
        } else if (isRightOverhang(buttonRect.right)) { //右に見切れている場合
          if (isButtonDistanceThanDiff(diff, buttonRect.right)) {//差分の方が小さい場合
            tooltipElem.style.right = "0px";
          } else {//差分の方が大きい場合
            tooltipElem.style.right = `${Math.abs(diff) - Math.abs(buttonRect.right)}px`;
          }
        }
        else {//見切れがない場合
          const tooltipLeft = buttonRect.left + diff;
          tooltipElem.style.left = `${tooltipLeft}px`;
        }


        if (tooltipElem.offsetHeight >= buttonRect.top) {//上にスペースがない場合
          tooltipElem.style.top = `${buttonRect.bottom}px`
        } else {
          tooltipElem.style.top = `${buttonRect.top - tooltipElem.offsetHeight}px`
        }


      } else {//ツールチップが大きい場合
        console.log("【ログ: でかいよ】is Run");
      }
    })

    document.onmouseout = function (e) {
      if (tooltipElem) {
        tooltipElem.remove();
        tooltipElem = null;
      }
    };
  </script>
</body>

<style>
  body {
    width: 600px;
    height: 300px;
    background-color: red;
  }

  .tooltip {
    position: fixed;
    padding: 3px;
    border: 1px solid #b3c9ce;
    border-radius: 4px;
    text-align: center;
    color: #333;
    background: #fff;
    box-shadow: 3px 3px 3px rgba(0, 0, 0, .3);
  }

  #inner {
    width: 1500px;
    height: 700px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .btn {
    margin: 70px;
  }
</style>


</html>
